/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>

&led_strip {
    chain-length = <29>;
};

/ {
    behaviors {
        rgb_encoder: rgb_encoder {
            compatible = "zmk,behavior-sensor-rotate";
            label = "RGB_ENCODER";
            #sensor-binding-cells = <0>;
            bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
// ------------------------------------------------------------------------------------------------------------
// |  `    |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |  DEL  |
// |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   \   |
// | LWIN  |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
// | CTRL  |  Z  |  X  |  C   |  V   |  B   |  GUI   |  |  GUI  |  N   |  M    |  ,    |  .   |   /   |  LALT  |
//               |  [  |  ]   | LOWER| BKSPC/SHIFT | SPACE |  | SPACE | ENTER/SHIFT | RAISE |  =    |  -   |
            bindings = <
&kp GRAVE &kp N1 &kp N2   &kp N3   &kp N4    &kp N5                      &kp N6 &kp N7    &kp N8    &kp N9   &kp N0   &kp DEL
&kp TAB   &kp Q  &kp W    &kp E    &kp R     &kp T                       &kp Y  &kp U     &kp I     &kp O    &kp P    &kp BSLH
&kp LWIN &kp A  &kp S    &kp D    &kp F     &kp G                       &kp H  &kp J     &kp K     &kp L    &kp SEMI &kp SQT
&kp LCTRL &kp Z  &kp X    &kp C    &kp V     &kp B  &kp LGUI      &kp LGUI  &kp N  &kp M     &kp COMMA &kp DOT  &kp FSLH &kp LALT
                 &kp LBKT &kp RBKT &mo 1     &mt RSHFT BSPC &kp SPACE &kp SPACE &mt RSHFT RET  &mo 2 &kp EQUAL  &kp MINUS
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PG_DN &inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        lower_layer {
// TODO: Some binds are waiting for shifted keycode support.
// ------------------------------------------------------------------------------------------------------------
// |  ESC  |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  | NUMLCK|   /   |   *  |   -   |   INS |
// | CAPS  |HOME |  UP |  END | PGUP |      |                   | HOME |  7    |   8   |   9  |   +   |       |
// | PSCRN |LEFT | DOWN| RIGHT| PGDN |      |                   | END  |  4    |   5   |   6  |   ,   |       |
// | RGBHUI|RGBSD|RGBSAI|RGBBRI|RGBBD|RGBTOG|        |  | MENU  |  =   |  1    |   2   |   3  | ENTER |       |
//               |RGBEFF|RGBEFR|     |      |        |  |       |      |       |   0   |   .  |
            bindings = <
&kp ESC   &kp F1   &kp F2    &kp F3      &kp F4    &kp F5                       &kp F6       &kp KP_NLCK &kp KP_SLASH &kp KP_MULTIPLY   &kp KP_MINUS  &kp INS 
&kp CAPS &kp HOME &kp UP    &kp END   &kp PG_UP   &trans                       &kp HOME     &kp KP_N7 &kp KP_N8    &kp KP_N9         &kp KP_PLUS   &trans
&kp PSCRN &kp LEFT &kp DOWN  &kp RIGHT &kp PG_DN   &trans                       &kp END      &kp KP_N4 &kp KP_N5    &kp KP_N6         &kp KP_COMMA  &trans
&rgb_ug RGB_HUI    &rgb_ug RGB_SAD    &rgb_ug RGB_SAI   &rgb_ug RGB_BRI    &rgb_ug RGB_BRD   &trans   &rgb_ug RGB_TOG     &kp K_APP &kp KP_EQUAL &kp KP_N1 &kp KP_N2    &kp KP_N3         &kp KP_ENTER  &trans
                   &rgb_ug RGB_EFR    &rgb_ug RGB_EFF      &trans    &trans    &trans   &trans    &trans       &trans    &kp KP_N0    &kp KP_DOT 
            >;
//I'd like to set up encoders to control RGB brightness but for now that only seems to control the left side only
            sensor-bindings = <&inc_dec_kp PG_UP PG_DN &inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        raise_layer {
// ------------------------------------------------------------------------------------------------------------
// | F12 | F1   | F2   |  F3   |  F4   |  F5  |                |  F6  |  F7  |  F8   |  F9  |  F10  |  F11  |
// |     |      | PLAY |       |VOL_UP |      |                |SCRLUP| LCLK |  MUP  | RCLK |       |       |
// |     |PREV  | STOP | NEXT  |VOL_DN |      |                |SCRLDN| MLFT |  MDN  | MRGT |       |       |
// |     |      |      |       |       |      |      |  |BT_CLR|BT_SEL|BT_SEL|BT_SEL |BT_SEL|BT_SEL |       |
//              |      |       |       |      |      |  |      |      |      |       |      |
            bindings = <
&kp F12    &kp F1       &kp F2       &kp F3       &kp F4       &kp F5                  &kp F6    &kp F7    &kp F8   &kp F9    &kp F10  &kp F11
&trans     &trans       &kp C_PP     &trans       &kp C_VOL_UP &trans                  &trans   &trans      &trans    &trans       &trans   &trans
&trans     &kp C_PREV   &kp C_STOP   &kp C_NEXT   &kp C_VOL_DN &trans                  &trans &trans &trans  &trans &trans   &trans
&trans     &trans       &trans       &trans       &trans       &trans  &trans   &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &trans
                        &trans       &trans       &trans       &trans  &trans   &trans  &trans    &trans    &trans   &trans
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PG_DN &inc_dec_kp C_VOL_DN C_VOL_UP>;
        };
    };
};
